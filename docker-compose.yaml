# Common service configuration for web and worker
x-base: &base
  build:
    context: .
    dockerfile: Dockerfile
  develop:
    watch:
      - path: .
        action: sync
        target: /app
  env_file:
    - .env
  environment:
    DATABASE_URL: postgres://hello_django:hello_django@db:5432/hello_django_dev
    REDIS_URL: redis://redis:6379/0
    DEBUG: "True"
    SECRET_KEY: foobar
    CORS_ALLOWED_ORIGINS: http://localhost:8110,http://localhost:8888
    CSRF_TRUSTED_ORIGINS: http://localhost:8110,http://localhost:8888
    R2_BUCKET_NAME: backend
    R2_DOMAIN_NAME: 127.0.0.1:9000/backend
    R2_ENDPOINT_URL: http://minio:9000
    R2_URL_PROTOCOL: "http:"
    R2_KEY: minio-root-user
    R2_SECRET: minio-root-password
    PYTHONTRACEMALLOC: 1
    PYTHONUNBUFFERED: 1

services:
  web:
    <<: *base
    ports:
      - 8110:8888
    healthcheck:
      test: curl --fail http://localhost:8888/ || exit 1
      interval: 10s
      retries: 10
      timeout: 2s
    command: ["bash", "-c", "cd foobar && ./start.sh"]
    depends_on:
      - minio
      - db
      - redis
      - worker
  worker:
    <<: *base
    command:
      ["bash", "-c", "cd foobar && uv run manage.py scheduler_worker default"]
    # We should not depend on ourself
    depends_on:
      - db
      - redis
      - minio
  minio:
    image: bitnami/minio:2024
    container_name: minio
    restart: always
    ports:
      - 9000:9000 # S3 API
      - 9001:9001 # MinIO Console
    environment:
      - MINIO_ROOT_USER=minio-root-user
      - MINIO_ROOT_PASSWORD=minio-root-password
      - MINIO_DEFAULT_BUCKETS=backend
    volumes:
      - minio_storage:/bitnami/minio/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5
  mc:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      while ! mc alias set myminio http://minio:9000 minio-root-user minio-root-password; do
        echo 'Waiting for MinIO to be ready...'
        sleep 5
      done;
      mc anonymous set download myminio/backend;
      exit 0;
      "
  db:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: hello_django_dev
      POSTGRES_USER: hello_django
      POSTGRES_PASSWORD: hello_django
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
  redis:
    image: redis:7
    restart: always
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data

volumes:
  minio_storage:
  postgres_data:
  redis_data:
